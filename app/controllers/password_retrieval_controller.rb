class PasswordRetrievalController < ApplicationController
  def action_allowed?
    true
  end

  def forgotten
  end
  
  #
  def send_password
    if params[:user][:email].nil? || params[:user][:email].strip.empty?
      flash[:error] = "Please enter an e-mail address."
    else
      user = User.find_by_email(params[:user][:email])
      if user
	url_format = "/password_edit/check_reset_url?token="
        token = SecureRandom.urlsafe_base64
        PasswordReset.save_token(user,token)
        url = self.request.base_url+url_format+token
        MailerHelper.send_mail_to_user(user, "Your Expertiza password has been reset", "send_password", url).deliver
        flash[:success] = "A new password has been sent to your e-mail address."
      else
        flash[:error] = "No account is associated with the e-mail address: \"" + params[:user][:email] + "\". Please try again."
      end
    end
    redirect_to action: 'forgotten'
  end

  #The token obtained from the reset url is first checked if it is valid ( if actually generated by the application), then checks if the token is active.
  def check_reset_url
    @token = Digest::SHA1.hexdigest(params[:token])
    password_reset=PasswordReset.find_by(:token => @token)
    if password_reset
      # URL expires after 1 day
      expired_url = password_reset.updated_at + 1.days < Time.now
      if !expired_url
        redirect_to action: 'reset_password', email: password_reset.user_email
      else
        flash[:error] = "Link expired . Please request to reset password again"
        redirect_to "/"
      end
    else
      flash[:error] = "Link either expired or wrong Token. Please request to reset password again"
      redirect_to "/"
    end
  end

  def reset_password
    @email = params[:email]
  end
  
  #called after entering password and repassword, checks for validation and updates the password of the email
  def update_password
    if params[:reset][:password] == params[:reset][:repassword]
      user=User.find_by(:email => params[:reset][:email])
      user.password = params[:reset][:password]
      user.password_confirmation = params[:reset][:repassword]
      if user.save
        flash[:success] = "reset password success"
        redirect_to "/"
      else
        flash[:error] = "password cannot be updated. Please try again"
        redirect_to "/"
      end
    else
      flash[:error] = "password and re-password do not match. Try again"
      redirect_to action: 'reset_password', email: params[:reset][:email]
    end
  end

end
